"use client"

import type React from "react"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Textarea } from "@/components/ui/textarea"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Label } from "@/components/ui/label"
import { Alert, AlertDescription } from "@/components/ui/alert"
import { UserCheck, AlertCircle, CheckCircle } from "lucide-react"

interface DoctorReferralProps {
  patientHistory: any
}

export function DoctorReferral({ patientHistory }: DoctorReferralProps) {
  const [symptoms, setSymptoms] = useState("")
  const [recommendation, setRecommendation] = useState("")
  const [isLoading, setIsLoading] = useState(false)
  const [error, setError] = useState("")

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    if (!symptoms.trim()) return

    setIsLoading(true)
    setError("")
    setRecommendation("")

    try {
      const response = await fetch("/api/referral", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          patientHistory,
          symptoms,
        }),
      })

      if (!response.ok) {
        throw new Error("Failed to get referral recommendation")
      }

      const data = await response.json()
      setRecommendation(data.recommendation)
    } catch (error) {
      console.error("Referral error:", error)
      setError("Failed to generate referral recommendation. Please try again.")
    } finally {
      setIsLoading(false)
    }
  }

  return (
    <div className="space-y-8">
      <Card className="bg-gray-800 border-gray-700">
        <CardHeader className="pb-6">
          <CardTitle className="flex items-center gap-3 text-white text-xl">
            <UserCheck className="w-6 h-6 text-green-500" />
            Doctor Referral Request
          </CardTitle>
        </CardHeader>
        <CardContent>
          <form onSubmit={handleSubmit} className="space-y-6">
            <div className="space-y-3">
              <Label htmlFor="symptoms" className="text-gray-200 text-base">
                Current Symptoms & Concerns
              </Label>
              <Textarea
                id="symptoms"
                value={symptoms}
                onChange={(e) => setSymptoms(e.target.value)}
                placeholder="Describe your current symptoms, concerns, or the reason you need a specialist referral..."
                className="min-h-[150px] bg-gray-700 border-gray-600 text-white placeholder-gray-400 focus:border-green-500"
                required
              />
            </div>

            <Button
              type="submit"
              disabled={isLoading || !symptoms.trim()}
              className="w-full bg-green-600 hover:bg-green-700 text-white py-3 text-lg"
            >
              {isLoading ? "Generating Referral..." : "Get Doctor Referral Recommendation"}
            </Button>
          </form>
        </CardContent>
      </Card>

      {error && (
        <Alert variant="destructive" className="bg-red-900 border-red-700">
          <AlertCircle className="h-5 w-5" />
          <AlertDescription className="text-red-100">{error}</AlertDescription>
        </Alert>
      )}

      {recommendation && (
        <Card className="bg-gray-800 border-gray-700">
          <CardHeader className="pb-6">
            <CardTitle className="flex items-center gap-3 text-green-400 text-xl">
              <CheckCircle className="w-6 h-6" />
              Referral Recommendation
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="prose max-w-none">
              <div className="whitespace-pre-wrap bg-gray-700 border border-gray-600 p-6 rounded-lg text-gray-100 leading-relaxed">
                {recommendation}
              </div>
            </div>

            <div className="p-6 bg-blue-900 rounded-lg border border-blue-700">
              <h4 className="font-semibold text-blue-200 mb-3 text-lg">Important Note:</h4>
              <p className="text-blue-100 leading-relaxed">
                This recommendation is generated by AI and should not replace professional medical advice. Please
                consult with your primary care physician or healthcare provider before making any medical decisions.
              </p>
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  )
}
